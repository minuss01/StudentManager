@model WEB.DTOs.Group.GroupCreateDto

@{
    ViewData["Title"] = "Create";
}

<h1>Dodaj grupę</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Level" class="control-label"></label>
                <select asp-for="Level" class="form-control">
                    @foreach (var level in Model.Levels)
                    {
                        if (level.Text != LevelEnum.Native.GetName())
                        {
                            <option value="@level.Value">@level.Text</option>
                        }
                    }
                </select>
                <span asp-validation-for="Level" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeacherId" class="control-label"></label>
                <select asp-for="TeacherId" class="form-control">
                    @foreach (var teacher in Model.Teachers)
                    {
                        <option value="@teacher.Value">@teacher.Text</option>
                    }
                </select>
                <span asp-validation-for="TeacherId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Dodaj" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
